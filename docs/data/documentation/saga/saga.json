{
  "abstract" : [
    {
      "text" : "The main Saga class, used to configure and build your website.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Saga\/documentation\/Saga"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Saga\/documentation\/Saga\/Saga"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:4SagaAAC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Saga"
      }
    ],
    "modules" : [
      {
        "name" : "Saga"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Saga"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "Saga"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Saga"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "code" : [
            "@main",
            "struct Run {",
            "  static func main() async throws {",
            "    try await Saga(input: \"content\", output: \"deploy\")",
            "      \/\/ All files in the input folder will be parsed to html, and written to the output folder.",
            "      .register(",
            "        metadata: EmptyMetadata.self,",
            "        readers: [.parsleyMarkdownReader],",
            "        writers: [.itemWriter(swim(renderPage))]",
            "      )",
            "",
            "      \/\/ Run the step we registered above",
            "      .run()",
            "",
            "      \/\/ All the remaining files that were not parsed to markdown, so for example images, raw html files and css,",
            "      \/\/ are copied as-is to the output folder.",
            "      .staticFiles()",
            "  }",
            "}"
          ],
          "syntax" : "swift",
          "type" : "codeListing"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "anchor" : "Initializers",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/init(input:output:fileIO:originFilePath:)"
      ],
      "title" : "Initializers"
    },
    {
      "anchor" : "Instance-Properties",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/fileStorage",
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/inputPath",
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/outputPath",
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/rootPath"
      ],
      "title" : "Instance Properties"
    },
    {
      "anchor" : "Instance-Methods",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/register(folder:metadata:readers:itemProcessor:filter:itemWriteMode:writers:)",
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/run()",
        "doc:\/\/Saga\/documentation\/Saga\/Saga\/staticFiles()"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/saga\/saga"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://Saga/documentation/Saga": {
  "abstract" : [
    {
      "text" : "A static site generator, written in Swift, allowing you to supply your own metadata types for your items.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "Saga",
  "type" : "topic",
  "url" : "\/documentation\/saga"
},
"doc://Saga/documentation/Saga/Saga": {
  "abstract" : [
    {
      "text" : "The main Saga class, used to configure and build your website.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Saga"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Saga"
    }
  ],
  "role" : "symbol",
  "title" : "Saga",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga"
},
"doc://Saga/documentation/Saga/Saga/fileStorage": {
  "abstract" : [
    {
      "text" : "An array of all file containters.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "fileStorage"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga13FileContainerC",
      "text" : "FileContainer"
    },
    {
      "kind" : "text",
      "text" : "]"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/fileStorage",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "fileStorage",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/filestorage"
},
"doc://Saga/documentation/Saga/Saga/init(input:output:fileIO:originFilePath:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "input"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7PathKit0A0V",
      "text" : "Path"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "output"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7PathKit0A0V",
      "text" : "Path"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "fileIO"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga6FileIOV",
      "text" : "FileIO"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "originFilePath"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s12StaticStringV",
      "text" : "StaticString"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/init(input:output:fileIO:originFilePath:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(input:output:fileIO:originFilePath:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/init(input:output:fileio:originfilepath:)"
},
"doc://Saga/documentation/Saga/Saga/inputPath": {
  "abstract" : [
    {
      "text" : "The path that contains your text files, relative to the ",
      "type" : "text"
    },
    {
      "code" : "rootPath",
      "type" : "codeVoice"
    },
    {
      "text" : ". For example “content”.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "inputPath"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7PathKit0A0V",
      "text" : "Path"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/inputPath",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "inputPath",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/inputpath"
},
"doc://Saga/documentation/Saga/Saga/outputPath": {
  "abstract" : [
    {
      "text" : "The path that Saga will write the rendered website to, relative to the ",
      "type" : "text"
    },
    {
      "code" : "rootPath",
      "type" : "codeVoice"
    },
    {
      "text" : ". For example “deploy”.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "outputPath"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7PathKit0A0V",
      "text" : "Path"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/outputPath",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "outputPath",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/outputpath"
},
"doc://Saga/documentation/Saga/Saga/register(folder:metadata:readers:itemProcessor:filter:itemWriteMode:writers:)": {
  "abstract" : [
    {
      "text" : "Register a new processing step.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "register"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "genericParameter",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ">("
    },
    {
      "kind" : "externalParam",
      "text" : "folder"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7PathKit0A0V",
      "text" : "Path"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "metadata"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ".Type, "
    },
    {
      "kind" : "externalParam",
      "text" : "readers"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga6ReaderV",
      "text" : "Reader"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ">], "
    },
    {
      "kind" : "externalParam",
      "text" : "itemProcessor"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga4ItemC",
      "text" : "Item"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ">) "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?, "
    },
    {
      "kind" : "externalParam",
      "text" : "filter"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga4ItemC",
      "text" : "Item"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : "), "
    },
    {
      "kind" : "externalParam",
      "text" : "itemWriteMode"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga13ItemWriteModeO",
      "text" : "ItemWriteMode"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "writers"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:4Saga6WriterV",
      "text" : "Writer"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "text" : "M"
    },
    {
      "kind" : "text",
      "text" : ">]) "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/register(folder:metadata:readers:itemProcessor:filter:itemWriteMode:writers:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "register(folder:metadata:readers:itemProcessor:filter:itemWriteMode:writers:)",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/register(folder:metadata:readers:itemprocessor:filter:itemwritemode:writers:)"
},
"doc://Saga/documentation/Saga/Saga/rootPath": {
  "abstract" : [
    {
      "text" : "The root working path. This is automatically set to the same folder that holds ",
      "type" : "text"
    },
    {
      "code" : "Package.swift",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rootPath"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7PathKit0A0V",
      "text" : "Path"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/rootPath",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rootPath",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/rootpath"
},
"doc://Saga/documentation/Saga/Saga/run()": {
  "abstract" : [
    {
      "text" : "Execute all the registered steps.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "run"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "async"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/run()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "run()",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/run()"
},
"doc://Saga/documentation/Saga/Saga/staticFiles()": {
  "abstract" : [
    {
      "text" : "Copy all unhandled files as-is to the output folder.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "staticFiles"
    },
    {
      "kind" : "text",
      "text" : "() "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    },
    {
      "kind" : "text",
      "text" : " -> "
    },
    {
      "kind" : "typeIdentifier",
      "text" : "Self"
    }
  ],
  "identifier" : "doc:\/\/Saga\/documentation\/Saga\/Saga\/staticFiles()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "staticFiles()",
  "type" : "topic",
  "url" : "\/documentation\/saga\/saga\/staticfiles()"
}
}
}