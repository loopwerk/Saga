{
  "includedArchiveIdentifiers" : [
    "Saga"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/saga\/installation",
            "title" : "Installation",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/saga\/gettingstarted",
            "title" : "Getting Started with Saga",
            "type" : "article"
          },
          {
            "path" : "\/documentation\/saga\/architecture",
            "title" : "Architecture",
            "type" : "article"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/reader\/init(supportedextensions:convert:)",
                "title" : "init(supportedExtensions: [String], convert: Reader<M>.Converter)",
                "type" : "init"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/reader\/converter",
                "title" : "Reader.Converter",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/saga\/reader",
            "title" : "Reader",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/writer\/itemwriter(_:)",
                "title" : "static func itemWriter((ItemRenderingContext<M>) throws -> String) -> Writer<M>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/saga\/writer\/listwriter(_:output:paginate:paginatedoutput:)",
                "title" : "static func listWriter((ItemsRenderingContext<M>) throws -> String, output: Path, paginate: Int?, paginatedOutput: Path) -> Writer<M>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/saga\/writer\/partitionedwriter(_:output:paginate:paginatedoutput:partitioner:)",
                "title" : "static func partitionedWriter<T>((PartitionedRenderingContext<T, M>) throws -> String, output: Path, paginate: Int?, paginatedOutput: Path, partitioner: ([Item<M>]) -> [T : [Item<M>]]) -> Writer<M>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/saga\/writer\/tagwriter(_:output:paginate:paginatedoutput:tags:)",
                "title" : "static func tagWriter((PartitionedRenderingContext<String, M>) throws -> String, output: Path, paginate: Int?, paginatedOutput: Path, tags: (Item<M>) -> [String]) -> Writer<M>",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/saga\/writer\/yearwriter(_:output:paginate:paginatedoutput:)",
                "title" : "static func yearWriter((PartitionedRenderingContext<Int, M>) throws -> String, output: Path, paginate: Int?, paginatedOutput: Path) -> Writer<M>",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/saga\/writer",
            "title" : "Writer",
            "type" : "struct"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/filecontainer\/handled",
                "title" : "var handled: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/filecontainer\/item",
                "title" : "var item: (any AnyItem)?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/filecontainer\/path",
                "title" : "let path: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/filecontainer\/relativepath",
                "title" : "let relativePath: Path",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/filecontainer",
            "title" : "FileContainer",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/item\/init(absolutesource:relativesource:relativedestination:title:body:date:lastmodified:metadata:)",
                "title" : "init(absoluteSource: Path, relativeSource: Path, relativeDestination: Path, title: String, body: String, date: Date, lastModified: Date, metadata: M)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/item\/absolutesource",
                "title" : "let absoluteSource: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/body",
                "title" : "var body: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/date",
                "title" : "var date: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/filenamewithoutextension",
                "title" : "var filenameWithoutExtension: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/lastmodified",
                "title" : "let lastModified: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/metadata",
                "title" : "var metadata: M",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/relativedestination",
                "title" : "var relativeDestination: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/relativesource",
                "title" : "let relativeSource: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/title",
                "title" : "var title: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/item\/url",
                "title" : "var url: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/item",
            "title" : "Item",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/saga\/init(input:output:fileio:originfilepath:)",
                "title" : "init(input: Path, output: Path, fileIO: FileIO, originFilePath: StaticString) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/saga\/filestorage",
                "title" : "let fileStorage: [FileContainer]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/saga\/inputpath",
                "title" : "let inputPath: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/saga\/outputpath",
                "title" : "let outputPath: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/saga\/rootpath",
                "title" : "let rootPath: Path",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/saga\/register(folder:metadata:readers:itemprocessor:filter:itemwritemode:writers:)",
                "title" : "func register<M>(folder: Path?, metadata: M.Type, readers: [Reader<M>], itemProcessor: ((Item<M>) async -> Void)?, filter: ((Item<M>) -> Bool), itemWriteMode: ItemWriteMode, writers: [Writer<M>]) throws -> Self",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/saga\/saga\/run()",
                "title" : "func run() async throws -> Self",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/saga\/saga\/staticfiles()",
                "title" : "func staticFiles() throws -> Self",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/saga\/saga",
            "title" : "Saga",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/absolutesource",
                "title" : "var absoluteSource: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/body",
                "title" : "var body: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/date",
                "title" : "var date: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/filenamewithoutextension",
                "title" : "var filenameWithoutExtension: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/lastmodified",
                "title" : "var lastModified: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/relativedestination",
                "title" : "var relativeDestination: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/relativesource",
                "title" : "var relativeSource: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/title",
                "title" : "var title: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/anyitem\/url",
                "title" : "var url: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/anyitem",
            "title" : "AnyItem",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/atomcontext\/m",
                "title" : "M",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/atomcontext\/items",
                "title" : "var items: [Item<Self.M>]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/atomcontext\/outputpath",
                "title" : "var outputPath: Path",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/atomcontext",
            "title" : "AtomContext",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/saga\/metadata",
            "title" : "Metadata",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/emptymetadata\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/saga\/emptymetadata\/init(from:)",
                "title" : "init(from: any Decoder) throws",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/saga\/emptymetadata",
            "title" : "EmptyMetadata",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/fileio\/diskaccess",
                "title" : "static var diskAccess: FileIO",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/fileio",
            "title" : "FileIO",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/itemrenderingcontext\/allitems",
                "title" : "let allItems: [any AnyItem]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/itemrenderingcontext\/item",
                "title" : "let item: Item<M>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/itemrenderingcontext\/items",
                "title" : "let items: [Item<M>]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/itemrenderingcontext\/resources",
                "title" : "let resources: [Path]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/itemrenderingcontext",
            "title" : "ItemRenderingContext",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/itemsrenderingcontext\/allitems",
                "title" : "let allItems: [any AnyItem]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/itemsrenderingcontext\/items",
                "title" : "let items: [Item<M>]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/itemsrenderingcontext\/outputpath",
                "title" : "let outputPath: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/itemsrenderingcontext\/paginator",
                "title" : "let paginator: Paginator?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/itemsrenderingcontext",
            "title" : "ItemsRenderingContext",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/paginator\/index",
                "title" : "let index: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/paginator\/itemsperpage",
                "title" : "let itemsPerPage: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/paginator\/next",
                "title" : "let next: Path?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/paginator\/numberofpages",
                "title" : "let numberOfPages: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/paginator\/previous",
                "title" : "let previous: Path?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/paginator",
            "title" : "Paginator",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/partitionedrenderingcontext\/allitems",
                "title" : "let allItems: [any AnyItem]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/partitionedrenderingcontext\/items",
                "title" : "let items: [Item<M>]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/partitionedrenderingcontext\/key",
                "title" : "let key: T",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/partitionedrenderingcontext\/outputpath",
                "title" : "let outputPath: Path",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/saga\/partitionedrenderingcontext\/paginator",
                "title" : "let paginator: Paginator?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/saga\/partitionedrenderingcontext",
            "title" : "PartitionedRenderingContext",
            "type" : "struct"
          },
          {
            "title" : "Functions",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/saga\/atomfeed(title:author:baseurl:summary:)",
            "title" : "func atomFeed<Context, M>(title: String, author: String?, baseURL: URL, summary: ((Item<M>) -> String?)?) -> (Context) -> String",
            "type" : "func"
          },
          {
            "path" : "\/documentation\/saga\/publicationdateinfilename(item:)",
            "title" : "func publicationDateInFilename<M>(item: Item<M>) async",
            "type" : "func"
          },
          {
            "path" : "\/documentation\/saga\/sequence(_:)",
            "title" : "func sequence<M>(((Item<M>) async -> Void)...) -> (Item<M>) async -> Void",
            "type" : "func"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/saga\/contextkey",
            "title" : "ContextKey",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/saga\/itemwritemode\/keepasfile",
                "title" : "case keepAsFile",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/saga\/itemwritemode\/movetosubfolder",
                "title" : "case moveToSubfolder",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/saga\/itemwritemode\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/saga\/itemwritemode\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/saga\/itemwritemode",
            "title" : "ItemWriteMode",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/saga\/pathkit\/path\/creationdate",
                    "title" : "var creationDate: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/saga\/pathkit\/path\/modificationdate",
                    "title" : "var modificationDate: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/saga\/pathkit\/path\/url",
                    "title" : "var url: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/saga\/pathkit\/path\/makeoutputpath(itemwritemode:)",
                    "title" : "func makeOutputPath(itemWriteMode: ItemWriteMode) -> Path",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/saga\/pathkit\/path\/relativepath(from:)",
                    "title" : "func relativePath(from: Path) throws -> Path",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/saga\/pathkit\/path\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/saga\/pathkit\/path\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/saga\/pathkit\/path",
                "title" : "Path",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/saga\/pathkit",
            "title" : "PathKit",
            "type" : "extension"
          },
          {
            "children" : [
              {
                "title" : "Extended Protocols",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/saga\/swift\/customstringconvertible\/slugified",
                    "title" : "var slugified: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/saga\/swift\/customstringconvertible",
                "title" : "CustomStringConvertible",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/saga\/swift",
            "title" : "Swift",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/saga",
        "title" : "Saga",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}